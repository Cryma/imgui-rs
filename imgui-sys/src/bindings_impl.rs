/* automatically generated by rust-bindgen 0.55.1 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(clippy::all)]

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D11DeviceContext {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D11Device {
    _unused: [u8; 0],
}
extern "C" {
    pub fn ImGui_ImplDX11_Init(
        device: *mut ID3D11Device,
        device_context: *mut ID3D11DeviceContext,
    ) -> bool;
}
extern "C" {
    pub fn ImGui_ImplDX11_Shutdown();
}
extern "C" {
    pub fn ImGui_ImplDX11_NewFrame();
}
extern "C" {
    pub fn ImGui_ImplDX11_RenderDrawData(draw_data: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn ImGui_ImplDX11_InvalidateDeviceObjects();
}
extern "C" {
    pub fn ImGui_ImplDX11_CreateDeviceObjects() -> bool;
}
extern "C" {
    pub fn ImGui_ImplWin32_Init(hwnd: *mut ::std::os::raw::c_void) -> bool;
}
extern "C" {
    pub fn ImGui_ImplWin32_Shutdown();
}
extern "C" {
    pub fn ImGui_ImplWin32_NewFrame();
}
extern "C" {
    pub fn ImGui_ImplWin32_EnableDpiAwareness();
}
extern "C" {
    pub fn ImGui_ImplWin32_GetDpiScaleForHwnd(hwnd: *mut ::std::os::raw::c_void) -> f32;
}
extern "C" {
    pub fn ImGui_ImplWin32_GetDpiScaleForMonitor(monitor: *mut ::std::os::raw::c_void) -> f32;
}
extern "C" {
    pub fn ImGui_ImplWin32_WndProcHandler(
        hWnd: *mut ::std::os::raw::c_void,
        msg: ::std::os::raw::c_uint,
        wParam: *mut ::std::os::raw::c_uint,
        lParam: ::std::os::raw::c_longlong,
    ) -> ::std::os::raw::c_longlong;
}
